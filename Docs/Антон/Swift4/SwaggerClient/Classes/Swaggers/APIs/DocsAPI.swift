//
// DocsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class DocsAPI {
    /**
     Создать или обновить паспорт клиента
     
     - parameter issuedBy: (form) Кем выдан (optional)
     - parameter issueDate: (form) Дата выдачи (optional)
     - parameter birthPlace: (form) Местро рождения (optional)
     - parameter series: (form) Серия паспорта (optional)
     - parameter number: (form) Номер (optional)
     - parameter birthDate: (form) Дата рождения (optional)
     - parameter name: (form) Имя (optional)
     - parameter surname: (form) Фамилия (optional)
     - parameter patronymic: (form) Отчество (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createOrUpdateClientPassport(issuedBy: String? = nil, issueDate: Date? = nil, birthPlace: String? = nil, series: String? = nil, number: String? = nil, birthDate: Date? = nil, name: String? = nil, surname: String? = nil, patronymic: String? = nil, completion: @escaping ((_ data: BaseApiResponse?,_ error: Error?) -> Void)) {
        createOrUpdateClientPassportWithRequestBuilder(issuedBy: issuedBy, issueDate: issueDate, birthPlace: birthPlace, series: series, number: number, birthDate: birthDate, name: name, surname: surname, patronymic: patronymic).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Создать или обновить паспорт клиента
     - POST /Api/Docs/Passport/CreateOrUpdate
     - examples: [{contentType=application/json, example={
  "IsSucceeded" : true,
  "Message" : "Message"
}}]
     
     - parameter issuedBy: (form) Кем выдан (optional)
     - parameter issueDate: (form) Дата выдачи (optional)
     - parameter birthPlace: (form) Местро рождения (optional)
     - parameter series: (form) Серия паспорта (optional)
     - parameter number: (form) Номер (optional)
     - parameter birthDate: (form) Дата рождения (optional)
     - parameter name: (form) Имя (optional)
     - parameter surname: (form) Фамилия (optional)
     - parameter patronymic: (form) Отчество (optional)

     - returns: RequestBuilder<BaseApiResponse> 
     */
    open class func createOrUpdateClientPassportWithRequestBuilder(issuedBy: String? = nil, issueDate: Date? = nil, birthPlace: String? = nil, series: String? = nil, number: String? = nil, birthDate: Date? = nil, name: String? = nil, surname: String? = nil, patronymic: String? = nil) -> RequestBuilder<BaseApiResponse> {
        let path = "/Api/Docs/Passport/CreateOrUpdate"
        let URLString = SwaggerClientAPI.basePath + path
        let formParams: [String:Any?] = [
            "IssuedBy": issuedBy,
            "IssueDate": issueDate?.encodeToJSON(),
            "BirthPlace": birthPlace,
            "Series": series,
            "Number": number,
            "BirthDate": birthDate?.encodeToJSON(),
            "Name": name,
            "Surname": surname,
            "Patronymic": patronymic
        ]

        let nonNullParameters = APIHelper.rejectNil(formParams)
        let parameters = APIHelper.convertBoolToString(nonNullParameters)
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<BaseApiResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Получить документы клиента
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getClientDocuments(completion: @escaping ((_ data: BaseApiResponseClientDocumentsModel?,_ error: Error?) -> Void)) {
        getClientDocumentsWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Получить документы клиента
     - GET /Api/Docs/Client/Get
     - examples: [{contentType=application/json, example={
  "IsSucceeded" : true,
  "Message" : "Message",
  "ResponseObject" : {
    "Passport" : {
      "Series" : "Series",
      "BirthPlace" : "BirthPlace",
      "Number" : "Number",
      "IssueDate" : "2000-01-23T04:56:07.000+00:00",
      "Patronymic" : "Patronymic",
      "IssuedBy" : "IssuedBy",
      "Surname" : "Surname",
      "BirthDate" : "2000-01-23T04:56:07.000+00:00",
      "Name" : "Name"
    }
  }
}}]

     - returns: RequestBuilder<BaseApiResponseClientDocumentsModel> 
     */
    open class func getClientDocumentsWithRequestBuilder() -> RequestBuilder<BaseApiResponseClientDocumentsModel> {
        let path = "/Api/Docs/Client/Get"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<BaseApiResponseClientDocumentsModel>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
